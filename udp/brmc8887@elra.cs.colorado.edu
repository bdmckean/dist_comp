#!/usr/bin/env python3
# copyright 2016 Brian McKean
#UDP Server


import sys
import argparse, socket
from datetime import datetime

from statistics import mean, stdev

DEFAULT_PORT  = 1060
MAX_BYTES = 65535

SAMPLES = 10

def TimestampMillisec():
        return int((datetime.utcnow() - datetime(1970, 1, 1)).total_seconds() * 1000)

def client(port):
    out = []
    back = []
    mySocket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
    
    for i in range(SAMPLES): 
        #text1 = 'The time is {}'.format(datetime.now())
        time1 = TimestampMillisec()
        text1 = 'The time is {}'.format(time1)
        data = text1.encode('ascii')
        mySocket.sendto(data, (server,port))
        data, addr = mySocket.recvfrom(MAX_BYTES)
        text2 = data.decode('ascii')
        time3 = TimestampMillisec()
        myAddr = mySocket.getsockname()
        print('The OS assigned me the address {}'.format(mySocket.getsockname()))
        print(text1) 
        print('The server at addr: {} replied {!r}'.format(addr, text2))
        print(text2)
        print(text2.split())
        print((text2.split())[-1]) 
        time2 = int((text2.split())[-1])
        print('time 1 {}, time 2 {}, time 3 {}',time1,time2,time3)
        print("server={} client={}",server,myAddr)
        out.append(time2-time1)
        back.append(time3-time2)

    
    print(out)
    print(back)

    print("Out Mean={}, stdev={}", mean(out), stdev(out))
    print("Back Mean={}, stdev={}", mean(back), stdev(back))

# Set p server to server 
if ( len(sys.argv) < 2):
    server = '127.0.0.1'
    print("Using local host: ",end="");
else:
    server = str(sys.argv[1])
print("Using server ",server)
if ( len(sys.argv) > 2):
    port = int(sys.argv[2])
else:
    port = DEFAULT_PORT
print("Using port ",port)


client(port)
